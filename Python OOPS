# PYTHON OOPS
# OBJECT-ORIENTED PROGRAMMING(OOP) CONSISTS OF 6 CONCEPTS-
# 1. CLASS
# 2. OBJECTS
# 3. INHERITANCE
# 4. POLYMORPHISM
# 5. ENCAPSULATION
# 6. DATA ABSTRACTION
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# TO GET A BETTER UNDERSTANDING ABOUT PYTHON OOPS, LET US HAVE A LOOK AT THE FOLLOWING CODE SNIPPET BELOW:

Class Student:
  def Check_Pass_Fail(self):
    if self.marks>=55:
      return True
    else:
      return False
      
  def __init__(self, name, age, marks):           # NOTE THAT THE '__init__' METHOD IS KNOWN AS 'MAGIC/DUNDER METHOD'. IT IS BASICALLY A CONSTRUCTOR USED TO CONSTRUCT THE                                                         'Student' CLASS, IN THIS EXAMPLE. AND ALL THE PARAMETERS GIVEN AFTER THE 'SELF' PARAMETER ARE CALLED 'OBJECTS'.
    self.name = name
    self.age = age
    self.marks = marks
    
# NOW, LET US CALL THIS CLASS 'STUDENT' USING SOME VARIABLES NAMED- 'Student_1' & 'Student_2', RESPECTIVELY.
Student_1 = Student("Harry", 17, 69)
Student_2 = Student("Adam", 14, 46)

did_pass_1 = Student_1.Check_Pass_Fail()
did_pass_2 = Student_2.Check_Pass_Fail()

print('Name: ', Student_1.name)
print('Age: ', Student_1.age)
print('Marks: ', Student_1.marks)
print(did_Pass_1)

print('Name: ', Student_2.name)
print('Age: ', Student_2.age)
print('Marks: ', Student_2.marks)
print(did_Pass_2)
